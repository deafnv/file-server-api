[[{"l":"File Server","p":["Basic file server with API routes for CRUD.","Authorization for a single admin api key/password, giving permissions for state-changing interactions like creating new folders, or uploading files. Unauthorized users will still be a able to view and download the files."]},{"l":"Usage","p":["Clone, create .env file with variables, run npm install and npm start. The server should start on port 80, and 443 if configured with HTTPS. See .env.template for details on the environment variable format."]},{"l":"Routes","p":["All routes causing state changes in the server require authorization by either a token cookie, or an API key. See Authorization Routes for details."]}],[{"l":"List of Routes"},{"l":"Non-authorized routes","p":["/list: Lists the file in a given directory. Lists root directory if unspecified.","/retrieve: Retrieves file specified. Supports video streaming.","/filetree: Returns a JSON representation of any subdirectories. Only lists directories, files are omitted."]},{"l":"Authorized routes","p":["/upload: Uploads files into directory provided.","/delete: Deletes files specified.","/makedir: Creates a folder in directory specified.","/move: Moves files and/or folders into a given directory.","/copy: Copy files and/or folders into a given directory.","/rename: Renames a file specified."]},{"l":"Authorization routes","p":["/authorize/get: Get JWT from body provided.","/authorize/delete: Delete any token cookie in request."]}],[{"i":"list","l":"/list"},{"l":"Route Details"},{"i":"listdirectory_path","l":"/list/{directory_path}","p":["Lists the file in a given directory. Lists root directory if unspecified."]},{"l":"Request","p":["Method: HTTP GET","Path parameter {directory_path}: /path/to/directory"]},{"l":"Response","p":["Array of variable length, with JSON object for each item in directory. Size in bytes."]}],[{"i":"retrieve","l":"/retrieve"},{"l":"Route Details"},{"i":"retrievefile_path","l":"/retrieve/{file_path}","p":["Retrieves file specified. Supports video streaming."]},{"l":"Request","p":["Method: HTTP GET","Path parameter {file_path}: /path/to/file"]},{"l":"Response","p":["Varies depending on file requested. Specified by Content-Type header in the response."]}],[{"i":"filetree","l":"/filetree"},{"l":"Route Details"},{"i":"filetree","l":"/filetree","p":["Returns a JSON representation of any subdirectories. Only lists directories, files are omitted."]},{"l":"Request","p":["Method: HTTP GET"]},{"l":"Response"}],[{"i":"upload","l":"/upload"},{"l":"Route Details"},{"i":"uploaddirectory_path","l":"/upload/{directory_path}","p":["Uploads files into directory provided."]},{"l":"Request","p":["Method: HTTP POST","Path parameter {directory_path}: /path/to/directory","Request body: Content-Type: multipart/form-data"]},{"l":"Response","p":["Status code 200."]}],[{"i":"delete","l":"/delete"},{"l":"Route Details"},{"i":"delete","l":"/delete","p":["Deletes files specified."]},{"l":"Request","p":["Method: HTTP DELETE","Request body: JSON object with pathToFiles, string array of any length with path of files to delete."]},{"l":"Response","p":["Status code 200."]}],[{"i":"makedir","l":"/makedir"},{"l":"Route Details"},{"i":"makedir","l":"/makedir","p":["Creates a folder in directory specified."]},{"l":"Request","p":["Method: HTTP POST","Request body:"]},{"l":"Response","p":["Status code 201."]}],[{"i":"move","l":"/move"},{"l":"Route Details"},{"i":"move","l":"/move","p":["Moves files and/or folders into a given directory."]},{"l":"Request","p":["Method: HTTP POST","Request body: JSON object with pathToFiles, string array of any length with path of files to move."]},{"l":"Response","p":["Status code 200."]}],[{"i":"copy","l":"/copy"},{"l":"Route Details"},{"i":"copy","l":"/copy","p":["Copy files and/or folders into a given directory."]},{"l":"Request","p":["Method: HTTP POST","Request body: JSON object with pathToFiles, string array of any length with path of files to copy."]},{"l":"Response","p":["Status code 200."]}],[{"i":"rename","l":"/rename"},{"l":"Route Details"},{"i":"rename","l":"/rename","p":["Renames a file specified."]},{"l":"Request","p":["Method: HTTP PATCH","Request body:"]},{"l":"Response","p":["Status code 200."]}],[{"l":"Authorization"}],[{"i":"authorizeget","l":"/authorize/get"},{"l":"Route Details"},{"i":"authorizeget","l":"/authorize/get","p":["Get JWT from body provided."]},{"l":"Request","p":["Method: HTTP POST","Request body: X-API-Key: api-key-provided-in-.env header. Any request body is used for generating JWT."]},{"l":"Response","p":["Status code 200 with Set-Cookie: token= header containing token."]}],[{"i":"authorizedelete","l":"/authorize/delete"},{"l":"Route Details"},{"i":"authorizedelete","l":"/authorize/delete","p":["Delete any token cookie in request."]},{"l":"Request","p":["Method: HTTP GET"]},{"l":"Response","p":["Status code 200 with Set-Cookie header to clear the token cookie."]}]]